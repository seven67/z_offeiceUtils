package person.seven.thread.masterWorker;import java.util.Map;import java.util.Set;import java.util.concurrent.ExecutionException;/** * @description: * @author: liuqi create on 2018/4/20 **/public class Application {    public static void main(String[] args) throws ExecutionException, InterruptedException {        //固定使用4个Workde        Master master = new Master(new PlusWorker(), 4);        //提交100个子任务        for (int i = 1; i <= 100; i++){            master.submit(i);        }        master.execute(); //开始计算        Map<String, Object> resultMap = master.getResultMap();        //最终计算结果保存在此        int re = 0;        //不需要等待所有Worker都执行完即可        while (true) {            Set<String> keys = resultMap.keySet();  //开始计算最终结果            String key = null;            for (String k : keys) {                key = k;                break;            }            Integer i = null;            if (key != null){                i = (Integer) resultMap.get(key);                re += i; //最终结果                resultMap.remove(key); //移除已被计算过的项目            }            if (master.isComplete() && resultMap.size() == 0)                break;        }        System.out.println(re);    }}