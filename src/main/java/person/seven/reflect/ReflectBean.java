package person.seven.reflect;import java.lang.reflect.Field;import java.lang.reflect.Modifier;/** * @description: * @author: liuqi create on 2018/7/16 **/public class ReflectBean {    public static final int MAX_NAME_LEN = 255;    public static void main(String[] args) throws NoSuchFieldException, ClassNotFoundException, IllegalAccessException, InstantiationException {//        // 获取class   Class.class   class.getClass()//        System.out.println(ReflectBean.class);//        System.out.println(new ReflectBean().getClass());//        System.out.println(new ReflectBean().getClass().getName());//        System.out.println(new ReflectBean().getClass().getSimpleName());//        System.out.println(new ReflectBean().getClass().getCanonicalName());//        System.out.println(new ReflectBean().getClass().getTypeName());//        System.out.println(new ReflectBean().getClass().getPackage());//        System.out.println(void.class);//        try {//            Class<?> cls = Class.forName(new ReflectBean().getClass().getName());//            System.out.println(cls.getName());//        } catch (ClassNotFoundException e) {//            e.printStackTrace();//        }//////        Field f = ReflectBean.class.getField("MAX_NAME_LEN");//        int mod = f.getModifiers();//        System.out.println(Modifier.toString(mod));//        System.out.println("isPublic: " + Modifier.isPublic(mod));//        System.out.println("isStatic: " + Modifier.isStatic(mod));//        System.out.println("isFinal: " + Modifier.isFinal(mod));//        System.out.println("isVolatile: " + Modifier.isVolatile(mod));        Class app = Class.forName("person.seven.reflect.App");        App app1 = (App) app.newInstance();        app1.sayHello();    }}