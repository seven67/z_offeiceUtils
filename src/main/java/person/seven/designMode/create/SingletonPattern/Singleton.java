package person.seven.designMode.create.SingletonPattern;import java.util.concurrent.locks.Lock;import java.util.concurrent.locks.ReentrantLock;/** * @description: * @author: liuqi create on 2018/8/14 **/public class Singleton {    private static Singleton singleton = null;    private static Lock lock = new ReentrantLock();    private void SingleObject(){}    public static Singleton getInstance(){        lock.lock();        try {            if(singleton == null){                return singleton = new Singleton();            }            return singleton;        } finally {            lock.unlock();        }        //双重检索模式//        if (singleton == null) {//            synchronized (Singleton.class) {//                if (singleton == null) {//                    singleton = new Singleton();//                }//            }//        }//        return singleton;    }}